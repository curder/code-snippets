import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.cac06360.js";const q=JSON.parse('{"title":"pint 代码风格","description":"","frontmatter":{},"headers":[],"relativePath":"programming-language/php/laravel/code-style/pint.md","filePath":"programming-language/php/laravel/code-style/pint.md","lastUpdated":1692867678000}'),p={name:"programming-language/php/laravel/code-style/pint.md"},l=o(`<h1 id="pint-代码风格" tabindex="-1">pint 代码风格 <a class="header-anchor" href="#pint-代码风格" aria-label="Permalink to &quot;pint 代码风格&quot;">​</a></h1><p><a href="https://laravel.com/docs/master/pint#main-content" target="_blank" rel="noreferrer">Laravel Pint</a> 支持开箱即用的代码风格检查和修复。</p><p>通过在项目根目录下添加 <code>pint.json</code> 来制定自定义的代码风格，更多自定义风格配置可以<a href="https://github.com/PHP-CS-Fixer/PHP-CS-Fixer/blob/master/doc/rules/index.rst" target="_blank" rel="noreferrer">查看这里</a>。</p><p>文件内容如下：</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;preset&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;laravel&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;rules&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;ordered_imports&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;sort_algorithm&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;length&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;imports_order&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">&quot;const&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">&quot;class&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">&quot;function&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            ]</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;preset&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;laravel&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;rules&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;ordered_imports&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;sort_algorithm&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;length&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;imports_order&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;const&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;class&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&quot;function&quot;</span></span>
<span class="line"><span style="color:#24292E;">            ]</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>ordered_imports</code> 格式化 PHP 中类的 <code>use</code> 语句，排序的规则使用字符长度，导入顺序按照 <code>const</code>、<code>class</code> 和 <code>function</code>。</p>`,6),e=[l];function t(c,r,E,i,y,u){return n(),a("div",null,e)}const _=s(p,[["render",t]]);export{q as __pageData,_ as default};
